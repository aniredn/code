myCorpus <- tm_map(myCorpus, content_transformer(tolower), lazy = TRUE)
myCorpus <- tm_map(myCorpus, removePunctuation,lazy = TRUE)
myCorpus <- tm_map(myCorpus, removeNumbers,lazy = TRUE)
#Removing URL
removeURL <- function(x) gsub("http[[:alnum:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL), lazy = TRUE)
myStopwords <- stopwords(kind = "en")
#Removing stop words from the corpus
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, removeWords, myStopwords,lazy = TRUE)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
myCorpus <- tm_map(myCorpus, stemDocument, lazy = TRUE)
for (i in 1:5) {
cat(paste("[[", i, "]] ", sep = ""))
#writeLines(myCorpus[[i]])
writeLines(as.character(myCorpus[[i]]))
}
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument, lazy = TRUE)
for (i in 1:5) {
cat(paste("[[", i, "]] ", sep = ""))
#writeLines(myCorpus[[i]])
writeLines(as.character(myCorpus[[i]]))
}
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument, lazy = TRUE)
}
for (i in 1:5) {
cat(paste("[[", i, "]] ", sep = ""))
writeLines(as.character(myCorpus[[i]]))
}
tdm <- TermDocumentMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
tdm
tdm <- TermDocumentMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
tdm <- TermDocumentMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
for (i in 1:5) {
cat(paste("[[", i, "]] ", sep = ""))
writeLines(as.character(myCorpus[[i]]))
}
tdm <- TermDocumentMatrix(myCorpus)
install.packages("SnowballC")
library(SnowballC)
myCorpus <- tm_map(myCorpus, stemDocument, lazy = TRUE)
tdm <- TermDocumentMatrix(myCorpus)
load("my_oauth.Rdata")
load("/my_oauth.Rdata")
/Users/anirudhreddy/Desktop/
load("/Users/anirudhreddy/Desktop/my_oauth.Rdata")
load("/Users/anirudhreddy/Desktop/my_oauth.Rdata")
filterStream(file.name = "live_tweets.json",track="US+elections", oauth = my_oauth, tweets = 10)
library(streamR)
filterStream(file.name = "live_tweets.json",track="US+elections", oauth = my_oauth, tweets = 10)
live_tweetparseTweets(file = "live_tweets.json")
live_tweet<-parseTweets(file = "live_tweets.json")
filterStream(file.name = "/Users/anirudhreddy/Desktop/live_tweets.json",track="US+elections|#uselections", oauth = my_oauth, tweets = 10, timeout = 60)
live_tweet<-parseTweets(file = "/Users/anirudhreddy/Desktop/live_tweets.json")
load("/Users/anirudhreddy/Desktop/Rdata/my_oauth.Rdata")
tweets_file<-"/Users/anirudhreddy/Desktop/live_tweets.json"
filterStream(file.name = tweets_file,track="US+elections|#uselections", oauth = my_oauth, tweets = 10, timeout = 60)
live_tweet<-parseTweets(tweets_file)
filterStream(file.name = tweets_file,track="#apple", oauth = my_oauth, tweets = 10, timeout = 60)
live_tweet<-parseTweets(tweets_file)
View(live_tweet)
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
live_tweet$text<-gsub("[^[:alpha:] ]","",live_tweet$text)
live_tweet$text<-tolower(live_tweet$text)
trump_live<- live_tweets[which(grepl("donald|trump", live_tweets$text)),]
clinton_live<- live_tweet[which(grepl("hillary|clinton", live_tweet$text)),]
trump_live<- live_tweet[which(grepl("donald|trump", live_tweet$text)),]
carson_live<- live_tweet[which(grepl("ben|carson", live_tweet$text)),]
sanders_live<- live_tweet[which(grepl("bernie|sanders", live_tweet$text)),]
clinton_live<- live_tweet[which(grepl("apple", live_tweet$text)),]
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(shiny)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
#Reading election data from a local file
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections13363.json")
tweets_1 <- fromJSON("Users/anirudhreddy/Desktop/Rdata/uselections.json")
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections.json")
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
#Reading election data from a local file
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections.json")
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
require(jsonlite)
#Reading election data from a local file
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/uselections13363.json")
detach("package:rjson", unload=TRUE)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
detach(rjson)
detach("rjson)
detach(rjson)
library(jsonlite)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
detach(package:rjson)
detach(package:streamR, unload = TRUE)
detach(package:rjson, unload = TRUE)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
detach(package:streamR, unload = TRUE)
detach(package:rjson, unload = TRUE)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
detach(package:streamR, unload = TRUE)
detach(package:rjson, unload = TRUE)
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
library(twitteR)
library(tm)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
detach(package:rjson, unload = TRUE)
detach(package:streamR, unload = TRUE)
detach(package:rjson, unload = TRUE)
detach(package:twitteR, unload = TRUE)
detach(package:rjson, unload = TRUE)
detach(package:rjson, unload = TRUE)
detach(package:twitteR, unload = TRUE)
library(jsonlite)
#library(twitteR)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/condos.json")
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
#Merging all dataframes
tweets_all<- rbind(tweets_1,tweets_2, tweets_3)
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
#Convert text to lowercase
tweets_all$text<-tolower(tweets_all$text)
#Filtering tweets based on keywords
tweets.rent<- count(which(grepl("rent|rental|lease", tweets_all$text)))
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text))]
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
View(tweets.buy)
View(tweets.rent)
sum(tweets.rent$favoriteCount)
sum(tweets.buy$favoriteCount)
tweets.nyc<- tweets_all[which(grepl("nyc|newyork", tweets_all$text)),]
barplot(nrow(tweets.rent), nrow(tweets.buy))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 1)
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5)
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Buying", "Renting"))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = "darkblue")
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = "darkblue", ylim = (0,2000))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = "darkblue", ylim = c(0,2000))
tweets_all$created <- as.Date(tweets_all$created)
View(tweets_all)
#Filtering tweets based on keywords
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
tweets.nyc<- tweets_all[which(grepl("nyc|newyork", tweets_all$text)),]
sum(tweets.rent$favoriteCount)
sum(tweets.buy$favoriteCount)
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = "darkblue", ylim = c(0,2000))
rm(tweets_3,tweets_2,tweets_1)
plot(tweets.rent$created)
barplot(tweets.rent$created)
hist(tweets.rent$created)
hist(tweets.rent$created)
hist(tweets.rent$created, breaks = 'days')
tweets.othercities<- tweets_all[which(grepl("sanfrancisco|francisco|seattle|sanjose|washington", tweets_all$text)),]
View(tweets.othercities)
tweets.othercities<- tweets.rent[which(grepl("sanfrancisco|francisco|seattle|sanjose|washington|austin|", tweets_all$text)),]
tweets.othercities<- tweets.rent[which(grepl("sanfrancisco|francisco|seattle|sanjose|washington|austin|", tweets.rent$text)),]
tweets.nyc<- tweets.rent[which(grepl("nyc|newyork", tweets.rent$text)),]
View(tweets.othercities)
barplot(c(sum(tweets.rent$favoriteCount),
sum(tweets.buy$favoriteCount)))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow, ylim = c(0,2000))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(3), ylim = c(0,2000))
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(3), ylim = c(0,2000))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(2), ylim = c(0,2000))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(4), ylim = c(0,2000))
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(6), ylim = c(0,2000))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
bk<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_brooklyn.csv")
br<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_bronx.csv")
mn <-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_manhattan.csv")
qn<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_queens.csv")
si<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_statenisland.csv")
local_all <- rbind(bk,br,mn,qn,si)
#Convert Column names to lower case
names(bk) <- tolower(names(bk))
names(br) <- tolower(names(br))
names(mn) <- tolower(names(mn))
names(qn) <- tolower(names(qn))
names(si) <- tolower(names(si))
## clean/format the data with regular expressions
bk$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$gross.square.feet))
bk$land.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$land.square.feet))
bk$sale.date <- as.Date(bk$sale.date, "%m/%d/%y")
bk$year.built <- as.numeric(as.character(bk$year.built))
br$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", br$gross.square.feet))
br$land.sqft <- as.numeric(gsub("[^[:digit:]]","", br$land.square.feet))
br$sale.date <- as.Date(br$sale.date, "%m/%d/%y")
br$year.built <- as.numeric(as.character(br$year.built))
mn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$gross.square.feet))
mn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$land.square.feet))
mn$sale.date <- as.Date(mn$sale.date, "%m/%d/%y")
mn$year.built <- as.numeric(as.character(mn$year.built))
qn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$gross.square.feet))
qn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$land.square.feet))
qn$sale.date <- as.Date(qn$sale.date, "%m/%d/%y")
qn$year.built <- as.numeric(as.character(qn$year.built))
si$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", si$gross.square.feet))
si$land.sqft <- as.numeric(gsub("[^[:digit:]]","", si$land.square.feet))
si$sale.date <- as.Date(si$sale.date, "%m/%d/%y")
si$year.built <- as.numeric(as.character(si$year.built))
#Create a new dataframe without houses having non zero sale prices or abnormally low prices
bk.sale <- bk[bk$sale.price.n!=0 & bk$sale.price.n>1000,]
br.sale <- br[br$sale.price.n!=0 & br$sale.price.n>1000,]
mn.sale <- mn[mn$sale.price.n!=0 & mn$sale.price.n>1000,]
qn.sale <- qn[qn$sale.price.n!=0 & qn$sale.price.n>1000,]
si.sale <- si[si$sale.price.n!=0 & si$sale.price.n>1000,]
library(jsonlite)
#library(twitteR)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/condos.json")
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
#Merging all dataframes
tweets_all<- rbind(tweets_1,tweets_2, tweets_3)
rm(tweets_3,tweets_2,tweets_1)
#Removing special characters
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
#Convert text to lowercase
tweets_all$text<-tolower(tweets_all$text)
#Format Dates
tweets_all$created <- as.Date(tweets_all$created)
#Filtering tweets based on keywords
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
#Plotting data from Twitter
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(6), ylim = c(0,2000))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
#Analyzing local data
bk<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_brooklyn.csv")
br<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_bronx.csv")
mn <-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_manhattan.csv")
qn<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_queens.csv")
si<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_statenisland.csv")
local_all <- rbind(bk,br,mn,qn,si)
#Convert Column names to lower case
names(bk) <- tolower(names(bk))
names(br) <- tolower(names(br))
names(mn) <- tolower(names(mn))
names(qn) <- tolower(names(qn))
names(si) <- tolower(names(si))
## clean/format the data with regular expressions
bk$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$gross.square.feet))
bk$land.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$land.square.feet))
bk$sale.date <- as.Date(bk$sale.date, "%m/%d/%y")
bk$year.built <- as.numeric(as.character(bk$year.built))
br$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", br$gross.square.feet))
br$land.sqft <- as.numeric(gsub("[^[:digit:]]","", br$land.square.feet))
br$sale.date <- as.Date(br$sale.date, "%m/%d/%y")
br$year.built <- as.numeric(as.character(br$year.built))
mn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$gross.square.feet))
mn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$land.square.feet))
mn$sale.date <- as.Date(mn$sale.date, "%m/%d/%y")
mn$year.built <- as.numeric(as.character(mn$year.built))
qn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$gross.square.feet))
qn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$land.square.feet))
qn$sale.date <- as.Date(qn$sale.date, "%m/%d/%y")
qn$year.built <- as.numeric(as.character(qn$year.built))
si$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", si$gross.square.feet))
si$land.sqft <- as.numeric(gsub("[^[:digit:]]","", si$land.square.feet))
si$sale.date <- as.Date(si$sale.date, "%m/%d/%y")
si$year.built <- as.numeric(as.character(si$year.built))
library(jsonlite)
#library(twitteR)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/condos.json")
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
#Merging all dataframes
tweets_all<- rbind(tweets_1,tweets_2, tweets_3)
rm(tweets_3,tweets_2,tweets_1)
#Removing special characters
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
#Convert text to lowercase
tweets_all$text<-tolower(tweets_all$text)
#Format Dates
tweets_all$created <- as.Date(tweets_all$created)
#Filtering tweets based on keywords
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
#Plotting data from Twitter
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(6), ylim = c(0,2000))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
#Analyzing local data
bk<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_brooklyn.csv")
br<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_bronx.csv")
mn <-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_manhattan.csv")
qn<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_queens.csv")
si<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_statenisland.csv")
local_all <- rbind(bk,br,mn,qn,si)
#Convert Column names to lower case
names(bk) <- tolower(names(bk))
names(br) <- tolower(names(br))
names(mn) <- tolower(names(mn))
names(qn) <- tolower(names(qn))
names(si) <- tolower(names(si))
## clean/format the data with regular expressions
bk$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$gross.square.feet))
bk$land.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$land.square.feet))
bk$sale.date <- as.Date(bk$sale.date, "%m/%d/%y")
bk$year.built <- as.numeric(as.character(bk$year.built))
br$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", br$gross.square.feet))
br$land.sqft <- as.numeric(gsub("[^[:digit:]]","", br$land.square.feet))
br$sale.date <- as.Date(br$sale.date, "%m/%d/%y")
br$year.built <- as.numeric(as.character(br$year.built))
mn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$gross.square.feet))
mn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$land.square.feet))
mn$sale.date <- as.Date(mn$sale.date, "%m/%d/%y")
mn$year.built <- as.numeric(as.character(mn$year.built))
qn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$gross.square.feet))
qn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$land.square.feet))
qn$sale.date <- as.Date(qn$sale.date, "%m/%d/%y")
qn$year.built <- as.numeric(as.character(qn$year.built))
si$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", si$gross.square.feet))
si$land.sqft <- as.numeric(gsub("[^[:digit:]]","", si$land.square.feet))
si$sale.date <- as.Date(si$sale.date, "%m/%d/%y")
si$year.built <- as.numeric(as.character(si$year.built))
bk.rent<- bk[which(grepl("rental", bk$building.class.category)),]
bk.rent<- bk[which(grepl("RENTAL", bk$building.class.category)),]
bk.rent<- bk[which(grepl("RENTAL", bk$building.class.category)),]
br.rent<- bk[which(grepl("RENTAL", br$building.class.category)),]
mn.rent<- bk[which(grepl("RENTAL", mn$building.class.category)),]
qn.rent<- bk[which(grepl("RENTAL", qn$building.class.category)),]
si.rent<- bk[which(grepl("RENTAL", si$building.class.category)),]
View(br.rent)
bk.rent<- bk[which(grepl("RENTALS", bk$building.class.category)),]
View(bk.rent)
View(br.rent)
bk.rent<- bk[which(grepl("RENTALS", bk$building.class.category)),]
br.rent<- bk[which(grepl("RENTALS", br$building.class.category)),]
mn.rent<- bk[which(grepl("RENTALS", mn$building.class.category)),]
qn.rent<- bk[which(grepl("RENTALS", qn$building.class.category)),]
si.rent<- bk[which(grepl("RENTALS", si$building.class.category)),]
View(br.rent)
bk.rent<- bk[which(grepl("RENTALS", bk$building.class.category)),]
br.rent<- br[which(grepl("RENTALS", br$building.class.category)),]
mn.rent<- mn[which(grepl("RENTALS", mn$building.class.category)),]
qn.rent<- qn[which(grepl("RENTALS", qn$building.class.category)),]
si.rent<- si[which(grepl("RENTALS", si$building.class.category)),]
View(br.rent)
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)))
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)), names=c("Brooklyn","Bronx","Manhattan", "Queens", "Staten Island"), ylab = "Number of Rentals", col = rainbow(5))
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)), names=c("Brooklyn","Bronx","Manhattan", "Queens", "Staten Island"), ylab = "Number of Rentals", col = rainbow(5), ylim = c(0,300))
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)), names=c("Brooklyn","Bronx","Manhattan", "Queens", "Staten Island"), ylab = "Number of Rentals", col = rainbow(5), ylim = c(0,3000))
shiny::runApp('Documents/CSE587/Project 1/Problem 5')
library(jsonlite)
#library(twitteR)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/condos.json")
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
#Merging all dataframes
tweets_all<- rbind(tweets_1,tweets_2, tweets_3)
rm(tweets_3,tweets_2,tweets_1)
#Removing special characters
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
#Convert text to lowercase
tweets_all$text<-tolower(tweets_all$text)
#Format Dates
tweets_all$created <- as.Date(tweets_all$created)
#Filtering tweets based on keywords
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
#Plotting data from Twitter
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(6), ylim = c(0,2000))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
#Analyzing local data
bk<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_brooklyn.csv")
br<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_bronx.csv")
mn <-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_manhattan.csv")
qn<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_queens.csv")
si<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_statenisland.csv")
local_all <- rbind(bk,br,mn,qn,si)
#Convert Column names to lower case
names(bk) <- tolower(names(bk))
names(br) <- tolower(names(br))
names(mn) <- tolower(names(mn))
names(qn) <- tolower(names(qn))
names(si) <- tolower(names(si))
## clean/format the data with regular expressions
bk$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$gross.square.feet))
bk$land.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$land.square.feet))
bk$sale.date <- as.Date(bk$sale.date, "%m/%d/%y")
bk$year.built <- as.numeric(as.character(bk$year.built))
br$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", br$gross.square.feet))
br$land.sqft <- as.numeric(gsub("[^[:digit:]]","", br$land.square.feet))
br$sale.date <- as.Date(br$sale.date, "%m/%d/%y")
br$year.built <- as.numeric(as.character(br$year.built))
mn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$gross.square.feet))
mn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$land.square.feet))
mn$sale.date <- as.Date(mn$sale.date, "%m/%d/%y")
mn$year.built <- as.numeric(as.character(mn$year.built))
qn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$gross.square.feet))
qn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$land.square.feet))
qn$sale.date <- as.Date(qn$sale.date, "%m/%d/%y")
qn$year.built <- as.numeric(as.character(qn$year.built))
si$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", si$gross.square.feet))
si$land.sqft <- as.numeric(gsub("[^[:digit:]]","", si$land.square.feet))
si$sale.date <- as.Date(si$sale.date, "%m/%d/%y")
si$year.built <- as.numeric(as.character(si$year.built))
#Classifying rental apartments
bk.rent<- bk[which(grepl("RENTALS", bk$building.class.category)),]
br.rent<- br[which(grepl("RENTALS", br$building.class.category)),]
mn.rent<- mn[which(grepl("RENTALS", mn$building.class.category)),]
qn.rent<- qn[which(grepl("RENTALS", qn$building.class.category)),]
si.rent<- si[which(grepl("RENTALS", si$building.class.category)),]
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)), names=c("Brooklyn","Bronx","Manhattan", "Queens", "Staten Island"), ylab = "Number of Rentals", col = rainbow(5), ylim = c(0,3000))
library(jsonlite)
#library(twitteR)
#Reading all JSON files into R
tweets_1 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/apartment.json")
tweets_2 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/condos.json")
tweets_3 <- fromJSON("/Users/anirudhreddy/Desktop/Rdata/houses.json")
#Merging all dataframes
tweets_all<- rbind(tweets_1,tweets_2, tweets_3)
rm(tweets_3,tweets_2,tweets_1)
#Removing special characters
tweets_all$text<-gsub("[^[:alpha:] ]","",tweets_all$text)
#Convert text to lowercase
tweets_all$text<-tolower(tweets_all$text)
#Format Dates
tweets_all$created <- as.Date(tweets_all$created)
#Filtering tweets based on keywords
tweets.rent<- tweets_all[which(grepl("rent|rental|lease", tweets_all$text)),]
tweets.buy<- tweets_all[which(grepl("buy|purchase|sell|selling|sale", tweets_all$text)),]
#Plotting data from Twitter
barplot(c(nrow(tweets.rent), nrow(tweets.buy)), width = 0.5, ylab = "Number of Tweets", names = c("Renting", "Buying"), col = rainbow(6), ylim = c(0,2000))
barplot(c(sum(tweets.rent$favoriteCount),sum(tweets.buy$favoriteCount)), ylab = "Favourited Count", names= c("Renting", "Buying"), col = rainbow(2))
#Analyzing local data
bk<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_brooklyn.csv")
br<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_bronx.csv")
mn <-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_manhattan.csv")
qn<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_queens.csv")
si<-read.csv("/Users/anirudhreddy/Desktop/Rdata/dds_ch2_rollingsales/rollingsales_statenisland.csv")
local_all <- rbind(bk,br,mn,qn,si)
#Convert Column names to lower case
names(bk) <- tolower(names(bk))
names(br) <- tolower(names(br))
names(mn) <- tolower(names(mn))
names(qn) <- tolower(names(qn))
names(si) <- tolower(names(si))
## clean/format the data with regular expressions
bk$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$gross.square.feet))
bk$land.sqft <- as.numeric(gsub("[^[:digit:]]","", bk$land.square.feet))
bk$sale.date <- as.Date(bk$sale.date, "%m/%d/%y")
bk$year.built <- as.numeric(as.character(bk$year.built))
br$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", br$gross.square.feet))
br$land.sqft <- as.numeric(gsub("[^[:digit:]]","", br$land.square.feet))
br$sale.date <- as.Date(br$sale.date, "%m/%d/%y")
br$year.built <- as.numeric(as.character(br$year.built))
mn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$gross.square.feet))
mn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", mn$land.square.feet))
mn$sale.date <- as.Date(mn$sale.date, "%m/%d/%y")
mn$year.built <- as.numeric(as.character(mn$year.built))
qn$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$gross.square.feet))
qn$land.sqft <- as.numeric(gsub("[^[:digit:]]","", qn$land.square.feet))
qn$sale.date <- as.Date(qn$sale.date, "%m/%d/%y")
qn$year.built <- as.numeric(as.character(qn$year.built))
si$gross.sqft <- as.numeric(gsub("[^[:digit:]]","", si$gross.square.feet))
si$land.sqft <- as.numeric(gsub("[^[:digit:]]","", si$land.square.feet))
si$sale.date <- as.Date(si$sale.date, "%m/%d/%y")
si$year.built <- as.numeric(as.character(si$year.built))
#Classifying rental apartments
bk.rent<- bk[which(grepl("RENTALS", bk$building.class.category)),]
br.rent<- br[which(grepl("RENTALS", br$building.class.category)),]
mn.rent<- mn[which(grepl("RENTALS", mn$building.class.category)),]
qn.rent<- qn[which(grepl("RENTALS", qn$building.class.category)),]
si.rent<- si[which(grepl("RENTALS", si$building.class.category)),]
barplot(c(nrow(bk.rent),nrow(br.rent),nrow(mn.rent),nrow(qn.rent), nrow(si.rent)), names=c("Brooklyn","Bronx","Manhattan", "Queens", "Staten Island"), ylab = "Number of Rentals", col = rainbow(5), ylim = c(0,3000))
